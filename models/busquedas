const fs = require('fs');
const axios = require('axios');


class Busquedas {
    
 historial =[];
 dbPath ='./db/database.json'

    constructor() {
        this.leerDB();
        
    }
get historialCapitalizado(){

    return this.historial.map(lugar =>{
    let palabras = lugar.split('');
    palabras = palabras.map(p => p[0].toUpperCase() + p.substring(1));
     return palabras.join('')
    })
}


    get paramsMapbox() {
        return {
            'access_token': process.env.MAPBOX_KEY,
            'limit': 5,
            'language': 'es'
        }
    }

   
    get paramsTEMP(){
        return{
          //  'lat':40.876211,
           // 'lon':-74.029862,
            'appid': process.env.OPENWEATHER_KEY,
            'lang': 'es'
            
        }
    }

    async ciudad( lugar = '' ) {

        try {
            // PeticiÃ³n http
            const intance = axios.create({
                baseURL: `https://api.mapbox.com/geocoding/v5/mapbox.places/${ lugar }.json`,
                params: this.paramsMapbox
            });

            const resp = await intance.get();
           return resp.data.features.map( lugar =>({
             id: lugar.id,
             nombre : lugar.place_name,
             lng: lugar.center[0],
             lat: lugar.center[1],

           }))
        
        } catch (error) {
            return [];
        }
    }



async climaLugar (lat,lon){
    try {
      const intance = axios.create({
            baseURL: `https://api.openweathermap.org/data/2.5/weather`,
            params: {...this.paramsTEMP,lat,lon}
           
        });
      const resp = await intance.get();
      const{weather,main} =resp.data;

     return{
        desc:weather[0].description,
        min:main.temp_min,
        max: main.temp_max,
        temp:main.temp

     }
   
     // return resp.data.coord;

      //  const resp = await axios .get('https://api.openweathermap.org/data/2.5/weather?lat=40.876211&lon=-74.029862&appid=96b0ca003feb4aaa7b91b94e89001375&lang=es');
       // console.log('yesdnf',resp.data);
       // const resp = await intance.get();

   
      /*  return resp.data.features.map( clima =>({
            des: clima.id,
            min:'',
            max:'',
            temp:'',
          id: lugar.id,
          nombre : lugar.place_name,
          lng: lugar.center[0],
          lat: lugar.center[1],

        }))
       */
    } catch (error) {
        console.log(error)
        
    }
}

agregarHistorial( lugar=''){
    if (this.historial.includes(lugar.toLocaleLowerCase())){
        return;
    }
    this.historial = this.historial.splice(0,5);
    this.historial.unshift(lugar.toLocaleLowerCase());

 this.guardarDB();
    //gravar archivo

}
guardarDB(){
    const payload={
        historial: this.historial
    }
fs.writeFileSync(this.dbPath, JSON.stringify(payload));
}
leerDB(){
    if( !fs.existsSync(this.dbPath) ){
        return ;
    }
    
    const info = fs.readFileSync(this.dbPath, { encoding: 'utf-8' });
    const data = JSON.parse( info );

   this.historial = data.historial

   

}

}





module.exports = Busquedas;